- hosts: localhost
  name: "Creates or Update the AxonOps metrics alerts"
  become: false
  connection: local
  gather_facts: false

  pre_tasks:
    - name: Get the Org name
      tags: always
      ansible.builtin.set_fact:
        org: "{{ lookup('env', 'AXONOPS_ORG') }}"
      when: org is not defined

    - name: Get the cluster name
      tags: always
      ansible.builtin.set_fact:
        cluster: "{{ lookup('env', 'AXONOPS_CLUSTER') }}"
      when: cluster is not defined

    - name: Fail if no org
      ansible.builtin.assert:
        that:
          - org is defined
          - org | length > 1
          - cluster is defined

    - name: Initialize axonops_alert_rules
      tags: always
      ansible.builtin.set_fact:
        axonops_alert_rules: "{{ axonops_alert_rules | default([]) }}"

    - name: Load organization-wide alert rules
      tags: always
      ansible.builtin.set_fact:
        axonops_alert_rules: "{{ axonops_alert_rules + (lookup('file', item) | from_yaml).axonops_alert_rules }}"
      with_fileglob:
        - "config/{{ org }}/metric_alert_rules.yml"

    - name: Load cluster-specific alert rules
      tags: always
      ansible.builtin.set_fact:
        axonops_alert_rules: "{{ axonops_alert_rules + (lookup('file', item) | from_yaml).axonops_alert_rules }}"
      with_fileglob:
        - "config/{{ org }}/{{ cluster }}/metric_alert_rules.yml"

    - name: Install alerts on {{ org }}/{{ cluster }}
      axonops.configuration.alert_rule:
        org: "{{ org }}"
        cluster: "{{ cluster }}"
        dashboard: "{{ item.dashboard }}"
        chart: "{{ item.chart }}"
        operator: "{{ item.operator }}"
        warning_value: "{{ item.warning_value }}"
        critical_value: "{{ item.critical_value }}"
        duration: "{{ item.duration }}"
        present: "{{ item.present|default(true) }}"
        description: "{{ item.description|default() }}"
        name: "{{ item.name|default() }}"
        scope: "{{ item.scope|default([]) }}"
        group_by: "{{ item.group_by|default([]) }}"
        routing: "{{ item.routing|default(omit) }}"
        percentile: "{{ item.percentile|default([]) }}"
        consistency: "{{ item.consistency|default([]) }}"
        metric: "{{ item.metric|default(omit) }}"
        keyspace: "{{ item.keyspace|default([]) }}"
        dc: "{{ item.dc|default([]) }}"
        rack: "{{ item.rack|default([]) }}"
        host_id: "{{ item.host_id|default([]) }}"
      loop: "{{ axonops_alert_rules }}"
      tags:
      - axonops_alert_rule
      - alert_rule
      - alert
      - rule


# code: language=ansible
