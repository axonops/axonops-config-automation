---
- name: Initialize axonops_shell_check
  tags: always
  ansible.builtin.set_fact:
    axonops_shell_check: []

- name: Load organization-wide shell check rules
  tags: always
  ansible.builtin.set_fact:
    axonops_shell_check: "{{ axonops_shell_check + (lookup('file', item) | from_yaml).axonops_shell_check }}"
  with_fileglob:
    - "config/{{ org }}/service_checks.yml"

- name: Load cluster-specific shell check rules
  tags: always
  ansible.builtin.set_fact:
    axonops_shell_check: "{{ axonops_shell_check + (lookup('file', item) | from_yaml).axonops_shell_check }}"
  with_fileglob:
    - "config/{{ org }}/{{ cluster }}/service_checks.yml"

- name: Initialize axonops_tcp_check
  tags: always
  ansible.builtin.set_fact:
    axonops_tcp_check: []

- name: Load organization-wide tcp check rules
  tags: always
  ansible.builtin.set_fact:
    axonops_tcp_check: "{{ axonops_tcp_check + (lookup('file', item) | from_yaml).axonops_tcp_check }}"
  with_fileglob:
    - "config/{{ org }}/service_checks.yml"

- name: Load cluster-specific tcp check rules
  tags: always
  ansible.builtin.set_fact:
    axonops_tcp_check: "{{ axonops_tcp_check + (lookup('file', item) | from_yaml).axonops_tcp_check }}"
  with_fileglob:
    - "config/{{ org }}/{{ cluster }}/service_checks.yml"

- name: "Apply TCP Check on {{ org }}/{{ cluster }}"
  axonops.configuration.tcp_check:
    org: "{{ org }}"
    cluster: "{{ cluster }}"
    cluster_type: "{{ tcpcheck_item.cluster_type | default(omit) }}"
    present: "{{ tcpcheck_item.present | default(true) }}"
    name: "{{ tcpcheck_item.name | default('') }}"
    interval: "{{ tcpcheck_item.interval }}"
    timeout: "{{ tcpcheck_item.timeout }}"
    tcp: "{{ tcpcheck_item.tcp }}"
  with_items:
    "{{ axonops_tcp_check }}"
  loop_control:
    loop_var: tcpcheck_item
  tags:
  - axonops_tcp_check
  - tcp_check
  - check
  - tcp

- name: "Apply Shell Check on {{ org }}/{{ cluster }}"
  axonops.configuration.shell_check:
    org: "{{ org }}"
    cluster: "{{ cluster }}"
    cluster_type: "{{ shellcheck_item.cluster_type | default(omit) }}"
    present: "{{ shellcheck_item.present | default(true) }}"
    name: "{{ shellcheck_item.name | default('') }}"
    interval: "{{ shellcheck_item.interval }}"
    timeout: "{{ shellcheck_item.timeout }}"
    shell: "{{ shellcheck_item.shell | default('/bin/bash') }}"
    script: "{{ shellcheck_item.script }}"
    auth_token: "{{ shellcheck_item.auth_token | default(omit) }}"
    username: "{{ shellcheck_item.username | default(omit) }}"
    password: "{{ shellcheck_item.password | default(omit) }}"
  with_items:
    "{{ axonops_shell_check }}"
  no_log: "{{ false if enable_logging is defined and enable_logging else true }}"
  loop_control:
    loop_var: shellcheck_item
  tags:
  - axonops_shell_check
  - shell_check
  - check
  - shell

# code: language=ansible
